name: Create Fabric GitHub Connection

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  create-github-connection:
    runs-on: ubuntu-latest

    steps:
      - name: Get Power BI Access Token
        id: get_token
        run: |
          response=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=${{ secrets.PBI_CLIENT_ID }}&client_secret=${{ secrets.PBI_CLIENT_SECRET }}&scope=https://analysis.windows.net/powerbi/api/.default" \
            https://login.microsoftonline.com/${{ secrets.PBI_TENANT_ID }}/oauth2/v2.0/token)

          echo "ACCESS_TOKEN=$(echo $response | jq -r '.access_token')" >> $GITHUB_ENV

      - name: Create Fabric GitHub Connection
        run: |
          echo "üöÄ Creating Fabric GitHub Connection..."

          payload=$(jq -n \
            --arg url "https://github.com/dp-benedict/sync_pipeline_demo" \
            --arg key "${{ secrets.PAT }}" \
            '{
              connectivityType: "ShareableCloud",
              displayName: "GitHubConnectionForSync",
              connectionDetails: {
                type: "GitHubSourceControl",
                creationMethod: "GitHubSourceControl.Contents",
                parameters: [
                  {
                    dataType: "Text",
                    name: "url",
                    value: $url
                  }
                ]
              },
              credentialDetails: {
                credentials: {
                  credentialType: "Key",
                  key: $key
                }
              }
            }')

          response=$(curl -s -w "%{http_code}" -o connection_response.json -X POST "https://api.fabric.microsoft.com/v1/connections" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$payload")

          echo "Status Code: $response"
          echo "Response Body:"
          cat connection_response.json

          if [[ "$response" != "201" ]]; then
            echo "üö® Failed to create GitHub Connection!"
            exit 1
          fi

      - name: Output Created Connection ID
        run: |
          echo "üîç Extracting created Connection ID..."
          CONNECTION_ID=$(jq -r '.id' connection_response.json)
          echo "Created Connection ID: $CONNECTION_ID"
