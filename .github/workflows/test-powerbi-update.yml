name: Test Power BI Git Credentials

on:
  workflow_dispatch:  # Manuelles Ausl√∂sen

permissions:
  contents: read

jobs:
  set-and-check-git-credentials:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Power BI Access Token
        id: get_token
        run: |
          response=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=${{ secrets.PBI_CLIENT_ID }}&client_secret=${{ secrets.PBI_CLIENT_SECRET }}&scope=https://analysis.windows.net/powerbi/api/.default" \
            https://login.microsoftonline.com/${{ secrets.PBI_TENANT_ID }}/oauth2/v2.0/token)

          echo "ACCESS_TOKEN=$(echo $response | jq -r '.access_token')" >> $GITHUB_ENV

      - name: Set Git Credentials
        id: set_git_credentials
        run: |
          echo "üåê Setting GitHub credentials in Power BI Workspace..."
          response=$(curl -s -w "%{http_code}" -o patch_response.json -X PATCH "https://api.fabric.microsoft.com/v1/workspaces/${{ secrets.PBI_WORKSPACE_ID }}/git/myGitCredentials" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{ \"provider\": \"GitHub\", \"accessToken\": \"${{ secrets.GITHUB_PAT }}\" }")

          echo "Status Code: $response"
          echo "Response Body:"
          cat patch_response.json

          if [[ "$response" != "200" ]]; then
            echo "üö® Failed to set Git Credentials!"
            exit 1
          fi

      - name: Validate Git Credentials
        run: |
          echo "üîç Checking saved Git Credentials..."
          curl -s -X GET "https://api.fabric.microsoft.com/v1/workspaces/${{ secrets.PBI_WORKSPACE_ID }}/git/myGitCredentials" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" | jq
