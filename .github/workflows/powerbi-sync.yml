name: Power BI Git Sync

on:
  push:
    branches:
      - demo_report_source

permissions:
  contents: write  # <--- WICHTIG für git push

jobs:
  sync-folders-and-powerbi:
    runs-on: ubuntu-latest
    env:
      FOLDERS_TO_COPY: "Demo_Bericht_Verlag.Report"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Copy Folders from demo_report_source to gf_reportings
        run: |
          git checkout gf_reportings
          git pull origin gf_reportings

          git checkout demo_report_source

          mkdir -p tmp_copy
          for folder in $FOLDERS_TO_COPY; do
            echo "Copying $folder..."
            cp -R $folder tmp_copy/
          done

          git checkout gf_reportings

          for folder in $FOLDERS_TO_COPY; do
            rm -rf $folder
            mv tmp_copy/$(basename $folder) $folder
            git add $folder
          done

          git commit -m "Sync selected folders from demo_report_source to gf_reportings" || echo "No changes"
          git push origin gf_reportings

      - name: Get Power BI Token
        id: get_token
        run: |
          response=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=${{ secrets.PBI_CLIENT_ID }}&client_secret=${{ secrets.PBI_CLIENT_SECRET }}&scope=https://analysis.windows.net/powerbi/api/.default" \
            https://login.microsoftonline.com/${{ secrets.PBI_TENANT_ID }}/oauth2/v2.0/token)
          echo "ACCESS_TOKEN=$(echo $response | jq -r '.access_token')" >> $GITHUB_ENV

      - name: Get my credentials
        run: |
          echo "🔍 Checking Git integration in Fabric workspace..."
      
          response=$(curl -s -w "%{http_code}" -o response.json \
            -X GET "https://api.fabric.microsoft.com/v1/workspaces/${{ secrets.PBI_WORKSPACE_ID }}/git/myGitCredentials" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json")
      
          echo "Status Code: $response"
          echo "Response Body:"
          cat response.json | jq
      
          if [[ "$response" != "200" ]]; then
            echo "❌ Credentials couldn't be returned."
            exit 1
          fi

      - name: Get Latest Commit Hash from GitHub
        id: get_remote_commit
        run: |
          latest_commit=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/dp-benedict/sync_pipeline_demo/commits/gf_reportings" | jq -r '.sha')
      
          echo "REMOTE_COMMIT=$latest_commit" >> $GITHUB_ENV

      - name: Get Current Workspace Head
        id: get_workspace_head
        run: |
          workspace_head=$(curl -s -X GET \
            "https://api.fabric.microsoft.com/v1/workspaces/${{ secrets.PBI_WORKSPACE_ID }}/git/connection" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" | jq -r '.gitSyncDetails.head')
      
          echo "WORKSPACE_HEAD=$workspace_head" >> $GITHUB_ENV

      - name: Trigger Power BI Git Update
        run: |
          curl -X POST "https://api.fabric.microsoft.com/v1/workspaces/${{ secrets.PBI_WORKSPACE_ID }}/git/updateFromGit" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"workspaceHead\": \"${workspaceHead}\",
              \"remoteCommitHash\": \"${remoteCommitHash}\",
              \"conflictResolution\": {
                \"conflictResolutionType\": \"Workspace\",
                \"conflictResolutionPolicy\": \"PreferRemote\"
              },
              \"options\": {
                \"allowOverrideItems\": true
              }
            }"
